# Generated by Django 4.2.2 on 2024-03-08 10:14

import ckeditor.fields
import colorfield.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import localflavor.us.models
import mptt.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=300, null=True)),
                ('address_id_name', models.CharField(max_length=1000)),
                ('type_of_address', models.CharField(choices=[('billing_address', 'Billing address'), ('shipping_address', 'Shipping address'), ('p_o_box_number', 'Post office box number')], max_length=1000)),
                ('street_name_01', models.CharField(blank=True, max_length=1000, null=True)),
                ('street_name_02', models.CharField(blank=True, max_length=1000, null=True)),
                ('street_city', models.CharField(blank=True, max_length=1000, null=True)),
                ('street_state', localflavor.us.models.USStateField(max_length=2)),
                ('street_zip_code', localflavor.us.models.USZipCodeField(max_length=10)),
                ('default_address', models.BooleanField(blank=True, default=False, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=1000)),
                ('slug', models.SlugField(max_length=1000)),
                ('tagline', models.CharField(max_length=1000)),
                ('websiteURL', models.URLField(blank=True, max_length=300, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=300, null=True)),
                ('email_address', models.EmailField(blank=True, max_length=300, null=True)),
                ('brand_logo', models.ImageField(blank=True, null=True, upload_to='media/PRODUCT/BRAND_LOGOS/')),
                ('brand_cover', models.ImageField(blank=True, null=True, upload_to='media/PRODUCT/BRAND_COVERS/')),
                ('description', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('brand_followers', models.ManyToManyField(to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BrandSocialFollowURL',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_social_profile_name', models.CharField(blank=True, max_length=300, null=True)),
                ('brand_social_profile_URL', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('description', models.TextField(blank=True, max_length=50, null=True)),
                ('category_icon', models.ImageField(blank=True, max_length=500, null=True, upload_to='media/PRODUCT/CATEGORY/CATEGORY_ICONS/')),
                ('category_cover_image', models.ImageField(blank=True, max_length=500, null=True, upload_to='media/PRODUCT/CATEGORY/CATEGORY_COVER_IMAGES/')),
                ('lft', models.PositiveIntegerField(editable=False)),
                ('rght', models.PositiveIntegerField(editable=False)),
                ('tree_id', models.PositiveIntegerField(db_index=True, editable=False)),
                ('mptt_level', models.PositiveIntegerField(editable=False)),
                ('parent', mptt.fields.TreeForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='ecommerce.category')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('description', models.TextField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Newsletters',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=50, null=True)),
                ('email_address', models.EmailField(blank=True, max_length=30, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_meta_title', models.CharField(blank=True, max_length=60, null=True)),
                ('product_meta_description', models.TextField(blank=True, max_length=160, null=True)),
                ('product_type', models.CharField(choices=[('single_product', 'Single product'), ('variable_product', 'Variable product'), ('groupped_product', 'Groupped product')], max_length=1000)),
                ('product_status', models.CharField(blank=True, choices=[('is_inactive', 'Inactive'), ('is_active', 'Active'), ('published', 'Published')], max_length=100, null=True)),
                ('title', models.CharField(blank=True, max_length=250, null=True)),
                ('slug', models.SlugField(blank=True, max_length=250, null=True)),
                ('featured_image', models.ImageField(blank=True, default='media/ECOMMERCE/PRODUCTS/FEATURED_IMAGES/default.png', null=True, upload_to='media/ECOMMERCE/PRODUCTS/FEATURED_IMAGES/')),
                ('price_regular', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_sale', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_MSRP', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tax_rate_ko', models.CharField(blank=True, choices=[], max_length=50, null=True)),
                ('description_short', ckeditor.fields.RichTextField(blank=True, max_length=50000, null=True)),
                ('description_full', ckeditor.fields.RichTextField(blank=True, max_length=50000, null=True)),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('product_SKU', models.CharField(blank=True, max_length=50, null=True)),
                ('product_UPC', models.CharField(blank=True, max_length=50, null=True)),
                ('product_STYLE', models.CharField(blank=True, max_length=50, null=True)),
                ('product_is_featured', models.BooleanField(default=False)),
                ('product_is_bestseller', models.BooleanField(default=False)),
                ('product_is_on_sale', models.BooleanField(default=False)),
                ('high_sell_through', models.BooleanField(default=False)),
                ('product_weights_lbl', models.CharField(blank=True, choices=[('kg', 'KG'), ('lb', 'LB'), ('oz', 'OZ'), ('gm', 'Grams'), ('mg', 'Milligrams')], max_length=1000, null=True)),
                ('item_weight_value', models.IntegerField(blank=True, null=True)),
                ('product_measurements_H', models.IntegerField(blank=True, null=True)),
                ('product_measurements_L', models.IntegerField(blank=True, null=True)),
                ('product_measurements_W', models.IntegerField(blank=True, null=True)),
                ('product_measurements_lbl', models.CharField(blank=True, choices=[('in', 'Inches')], max_length=1000, null=True)),
                ('color', colorfield.fields.ColorField(default='#FF0000', image_field=None, max_length=25, samples=None)),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='brand', to='ecommerce.brand')),
                ('category', models.ManyToManyField(blank=True, null=True, to='ecommerce.category')),
            ],
        ),
        migrations.CreateModel(
            name='ProductAttribute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attribute', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='ProductAttributes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attributes', models.ManyToManyField(to='ecommerce.productattribute')),
            ],
        ),
        migrations.CreateModel(
            name='ProductColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('slug', models.SlugField(max_length=300)),
                ('color', colorfield.fields.ColorField(default='#FF0000', image_field=None, max_length=25, samples=None)),
            ],
        ),
        migrations.CreateModel(
            name='ProductDetailsListItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('details_description', ckeditor.fields.RichTextField(blank=True, max_length=10050, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductGalleryImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image_name', models.CharField(max_length=300)),
                ('image', models.ImageField(blank=True, max_length=500, null=True, upload_to='media/PRODUCT/GALLERY_IMAGES/')),
            ],
        ),
        migrations.CreateModel(
            name='ProductGalleryImagesSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('images', models.ManyToManyField(to='ecommerce.productgalleryimage')),
            ],
        ),
        migrations.CreateModel(
            name='ProductKeywords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword', models.CharField(max_length=300)),
            ],
        ),
        migrations.CreateModel(
            name='ProductKeywordsSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.ManyToManyField(to='ecommerce.productkeywords')),
            ],
        ),
        migrations.CreateModel(
            name='ProductSize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(blank=True, choices=[('s', 'S'), ('xxs', 'XXS'), ('m', 'M'), ('l', 'L'), ('xxxl', 'XXXL'), ('xxl', 'XXL'), ('xs', 'XS'), ('xxxs', 'XXXS'), ('xl', 'XL')], max_length=90, null=True)),
                ('size_value_h', models.DecimalField(decimal_places=2, max_digits=9)),
                ('size_value_l', models.DecimalField(decimal_places=2, max_digits=9)),
                ('size_value_w', models.DecimalField(decimal_places=2, max_digits=9)),
                ('size_label', models.CharField(blank=True, choices=[('ft', 'Feet'), ('cm', 'CM'), ('in', 'Inches')], max_length=500, null=True)),
                ('size_value', models.DecimalField(decimal_places=2, max_digits=9)),
            ],
        ),
        migrations.CreateModel(
            name='ProductSizeSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('sizes', models.ManyToManyField(to='ecommerce.productsize')),
            ],
        ),
        migrations.CreateModel(
            name='ProductSpecification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specification_name', models.CharField(blank=True, max_length=1000, null=True)),
                ('specification_value', models.CharField(blank=True, max_length=1000, null=True)),
                ('specification_description', ckeditor.fields.RichTextField(blank=True, max_length=10000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductSpecifications',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specifications', models.ManyToManyField(to='ecommerce.productspecification')),
            ],
        ),
        migrations.CreateModel(
            name='ProductStockManagement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=400)),
                ('stock_status', models.CharField(choices=[('in_stock', 'In stock'), ('out_of_stock', 'Out of stock')], max_length=300)),
                ('stock_quantity', models.IntegerField(blank=True, null=True)),
                ('alert_low_stock', models.BooleanField(blank=True, default=False, max_length=1000, null=True)),
                ('low_quantity_to_alert', models.IntegerField(blank=True, help_text='Enter the minimum amount of stock to begin alert', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductTagsCloud',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_cloud', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductTagsClouds',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_clouds', models.ManyToManyField(blank=True, null=True, to='ecommerce.producttagscloud')),
            ],
        ),
        migrations.CreateModel(
            name='ProductVariable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('slug', models.SlugField(max_length=300)),
                ('featured_image', models.ImageField(blank=True, null=True, upload_to='media/PRODUCTS/VARIATIONS/VARIABLE_IMAGES/')),
                ('price_regular', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('price_sale', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('price_final', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('MSRP_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('MAP_price', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('product_UPC', models.CharField(blank=True, max_length=300, null=True)),
                ('product_SKU', models.CharField(blank=True, max_length=300, null=True)),
                ('product_MODEL_ID', models.CharField(blank=True, max_length=300, null=True)),
                ('product_is_featured', models.BooleanField(default=False)),
                ('product_is_bestseller', models.BooleanField(default=False)),
                ('product_is_on_sale', models.BooleanField(default=False)),
                ('high_sell_through', models.BooleanField(default=False)),
                ('description_short', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('description_full', ckeditor.fields.RichTextField(blank=True, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField()),
                ('color', colorfield.fields.ColorField(default='#FF0000', image_field=None, max_length=25, samples=None)),
                ('product_size_vlu', models.DecimalField(blank=True, decimal_places=2, max_digits=9, null=True)),
                ('product_size_lbl', models.CharField(blank=True, choices=[('qt', 'QT')], max_length=100, null=True)),
                ('product_weights_lbl', models.CharField(blank=True, choices=[('kg', 'KG'), ('lb', 'LB'), ('oz', 'OZ'), ('gm', 'Grams'), ('mg', 'Milligrams'), ('lt', 'Liters'), ('cp', 'Cups')], max_length=1000, null=True)),
                ('item_weight_value', models.CharField(blank=True, max_length=1000, null=True)),
                ('product_measurements_H', models.CharField(blank=True, max_length=500, null=True)),
                ('product_measurements_L', models.CharField(blank=True, max_length=500, null=True)),
                ('product_measurements_W', models.CharField(blank=True, max_length=500, null=True)),
                ('product_measurements_lbl', models.CharField(blank=True, choices=[('in', 'Inches'), ('cm', 'cm')], max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ProductVariationImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_image', models.ImageField(upload_to='media/PRODUCTS/FEATURED_IMAGES/')),
            ],
        ),
        migrations.CreateModel(
            name='ProductVariationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('varitaion_type', models.CharField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='ShippingCarrier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('shipping_carrier_logo', models.ImageField(blank=True, null=True, upload_to='media/SHIPPING_CARRIERS_LOGOS')),
                ('description', ckeditor.fields.RichTextField(blank=True, max_length=500, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='TaxRate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('state', localflavor.us.models.USStateField(max_length=2)),
                ('tax_rate_amount', models.DecimalField(decimal_places=2, max_digits=9)),
            ],
        ),
        migrations.CreateModel(
            name='VariableColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('slug', models.SlugField(max_length=300)),
                ('color', colorfield.fields.ColorField(default='#FF0000', image_field=None, max_length=25, samples=None)),
            ],
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('wishlist_cover_image', models.ImageField(blank=True, null=True, upload_to='media/WISHLIST_COVER_IMAGES/')),
                ('description', ckeditor.fields.RichTextField(blank=True, max_length=500, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(blank=True, null=True)),
                ('products', models.ManyToManyField(blank=True, null=True, to='ecommerce.product')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='TaxSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('tax_rate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.taxrate')),
            ],
        ),
        migrations.CreateModel(
            name='ShippingSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shipping_type', models.CharField(blank=True, choices=[('free_2_day_shipping', 'Free 2 Day Shipping'), ('free_shipping', 'Free Shipping'), ('free_express_shipping', 'Free Express Shipping')], max_length=70, null=True)),
                ('shipping_status', models.CharField(blank=True, choices=[('delivered', 'Delivered'), ('unshipped', 'Unshipped'), ('shipped', 'Shipped'), ('preshipment', 'Pre-shipment')], max_length=50, null=True)),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('shipping_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('shipping_cost_TAX', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tracking_number', models.CharField(blank=True, max_length=50, null=True)),
                ('tracking_number_URL', models.URLField(blank=True, max_length=50, null=True)),
                ('date_shipped', models.DateTimeField()),
                ('date_estimated_delivery', models.DateTimeField()),
                ('note', ckeditor.fields.RichTextField(blank=True, max_length=500, null=True)),
                ('carrier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.shippingcarrier')),
            ],
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_IP', models.CharField(blank=True, max_length=50, null=True)),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('rating', models.CharField(blank=True, choices=[('3', '3'), ('5', '5'), ('2', '2'), ('4', '4'), ('1', '1')], max_length=50, null=True)),
                ('review_comment', ckeditor.fields.RichTextField(max_length=300)),
                ('date_posted', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField()),
                ('status', models.CharField(blank=True, choices=[('published', 'Published'), ('draft', 'Draft')], max_length=50, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductVariations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variations_id', models.CharField(max_length=300)),
                ('variations_name', models.CharField(max_length=300)),
                ('type_of_variation', models.ManyToManyField(max_length=200, to='ecommerce.productvariationtype')),
                ('variations', models.ManyToManyField(blank=True, null=True, to='ecommerce.productvariable')),
            ],
        ),
        migrations.CreateModel(
            name='ProductVariableProductImageGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.CharField(max_length=300)),
                ('images', models.ManyToManyField(to='ecommerce.productvariationimage')),
            ],
        ),
        migrations.AddField(
            model_name='productvariable',
            name='product_variable_image_gallery',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.productvariableproductimagegallery'),
        ),
        migrations.AddField(
            model_name='productvariable',
            name='size',
            field=models.ManyToManyField(to='ecommerce.productsizeset'),
        ),
        migrations.CreateModel(
            name='ProductTagsCloudsSet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag_clouds_set', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.producttagsclouds')),
            ],
        ),
        migrations.CreateModel(
            name='ProductSpecificationsSets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specifications_set_name', models.CharField(max_length=1000)),
                ('specifications_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerce.productspecifications')),
            ],
        ),
        migrations.CreateModel(
            name='ProductMetas',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_meta_title', models.CharField(max_length=60)),
                ('product_meta_description', models.TextField(max_length=160)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.product')),
                ('product_meta_keywords', models.ForeignKey(max_length=300, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.productkeywordsset')),
            ],
        ),
        migrations.CreateModel(
            name='ProductImageGallery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gallery_name', models.CharField(max_length=300)),
                ('images', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerce.productgalleryimagesset')),
            ],
        ),
        migrations.CreateModel(
            name='ProductDetailsListItems',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_details_list_items', models.ManyToManyField(to='ecommerce.productdetailslistitem')),
            ],
        ),
        migrations.CreateModel(
            name='ProductDetailsList',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=50, null=True)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('product_details_list_items', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.productdetailslistitems')),
            ],
        ),
        migrations.CreateModel(
            name='ProductAttributesSets',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attributes_set_name', models.CharField(max_length=1000)),
                ('attributes_set', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ecommerce.productattributes')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='image_galley',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_image_gallery', to='ecommerce.productimagegallery'),
        ),
        migrations.AddField(
            model_name='product',
            name='likes',
            field=models.ManyToManyField(blank=True, null=True, related_name='product_likes', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='product',
            name='product_attributes_set',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_attributes_set', to='ecommerce.productattributessets'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_color',
            field=models.ManyToManyField(blank=True, null=True, to='ecommerce.productcolor'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_details_list',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.productdetailslist'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_meta_keywords',
            field=models.ForeignKey(blank=True, max_length=300, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.productkeywordsset'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_metas_set',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_metas', to='ecommerce.productmetas'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_reviews_rating',
            field=models.ManyToManyField(blank=True, null=True, to='ecommerce.reviews'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_saves',
            field=models.ManyToManyField(blank=True, null=True, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='product',
            name='product_size',
            field=models.ManyToManyField(blank=True, null=True, to='ecommerce.productsizeset'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_specifications_set',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_specifications_set', to='ecommerce.productspecificationssets'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_stock_management',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_stock_management', to='ecommerce.productstockmanagement'),
        ),
        migrations.AddField(
            model_name='product',
            name='product_variations_set',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.productvariations'),
        ),
        migrations.AddField(
            model_name='product',
            name='tag_clouds',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.producttagscloudsset'),
        ),
        migrations.AddField(
            model_name='product',
            name='tax_rate',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.taxsettings'),
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=40)),
                ('last_name', models.CharField(max_length=40)),
                ('payment_method', models.CharField(choices=[('bank_account', 'Bank account'), ('credit_or_debit_card', 'Credit or debit card'), ('paypal', 'PayPal')], max_length=20)),
                ('card_number', models.CharField(max_length=50)),
                ('expiration_date', models.CharField(max_length=50)),
                ('security_code', models.CharField(max_length=50)),
                ('zip_code', models.CharField(max_length=50)),
                ('card_type', models.CharField(blank=True, choices=[('visa', 'VISA'), ('mastercard', 'MasterCard'), ('american_express', 'American Express'), ('discover', 'Discover')], max_length=1000, null=True)),
                ('set_to_default', models.BooleanField(blank=True, default=False, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderVarItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1)),
                ('tax_rate_ko', models.CharField(blank=True, choices=[], max_length=50, null=True)),
                ('tax_rate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.taxsettings')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('var_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.productvariable')),
            ],
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(default=1)),
                ('tax_rate_ko', models.CharField(blank=True, choices=[], max_length=50, null=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.product')),
                ('tax_rate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.taxsettings')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('var_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.productvariable')),
            ],
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order_status', models.CharField(blank=True, choices=[('pending', 'Pending'), ('processing', 'Processing'), ('active', 'Active'), ('unshipped', 'Unshipped'), ('shipped', 'Shipped'), ('canceled', 'Canceled')], max_length=30, null=True)),
                ('date_created', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_canceled', models.DateTimeField(auto_now_add=True, null=True)),
                ('date_shipped', models.DateTimeField(blank=True, null=True)),
                ('address_billing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_billing_address', to='ecommerce.address')),
                ('address_shipping', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_shipping_address', to='ecommerce.address')),
                ('order_items', models.ManyToManyField(blank=True, null=True, to='ecommerce.orderitem')),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.payment')),
                ('shipping_rate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.shippingsettings')),
                ('tax_rate', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.taxsettings')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('var_order_items', models.ManyToManyField(blank=True, null=True, related_name='var_order_items', to='ecommerce.orderitem')),
            ],
        ),
        migrations.CreateModel(
            name='BrandSocialFollowURLS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social_profiles_URLS', models.ManyToManyField(blank=True, to='ecommerce.brandsocialfollowurl')),
            ],
        ),
        migrations.CreateModel(
            name='BrandSocialFollows',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_social_follows_name', models.CharField(blank=True, max_length=300, null=True)),
                ('social_profiles_URLS', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.brandsocialfollowurls')),
            ],
        ),
        migrations.CreateModel(
            name='BrandProducts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('products', models.ManyToManyField(blank=True, related_name='brand_product_set', to='ecommerce.product')),
            ],
        ),
        migrations.CreateModel(
            name='BrandProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('products', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='brand_product', to='ecommerce.product')),
            ],
        ),
        migrations.AddField(
            model_name='brand',
            name='brand_products',
            field=models.ManyToManyField(blank=True, null=True, related_name='brand_products', to='ecommerce.brandproducts'),
        ),
        migrations.AddField(
            model_name='brand',
            name='brand_social_follow',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='ecommerce.brandsocialfollows'),
        ),
    ]
